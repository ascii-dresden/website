---
import { border_width } from 'src/styles/border.css.ts';

type Props = {
	stroke: string;
	from: string;
	to: string;
};

const SIZE = 8;

const { stroke, from, to } = Astro.props;

const width = SIZE * 4;
const height = SIZE + border_width;

const startY = border_width / 2;
const endY = SIZE + border_width / 2;

const id = `pattern-${btoa(stroke)}-${btoa(from)}-${btoa(to)}`;
---

<svg
	style={{ position: 'absolute', top: height * -0.5 }}
	preserve-aspect-ratio="none"
	width="100%"
	height={height}
>
	<defs>
		<pattern
			id={id}
			patternUnits="userSpaceOnUse"
			viewBox={`0 0 ${width} ${height}`}
			width={width}
			height={height}
		>
			<!-- from -->
			<path d={`M0,${startY} L${width},${startY}`} stroke={from} stroke-width={border_width}>
			</path>
			<path
				d={[
					`M0,${startY}`,
					`L0,${endY}`,
					`C${SIZE},${endY} ${SIZE},${startY} ${SIZE * 2},${startY}`,
					`C${SIZE * 3},${startY} ${SIZE * 3},${endY} ${width},${endY}`,
					`L${width},${startY}`,
				].join(' ')}
				fill={from}></path>

			<!-- to -->
			<path d={`M0,${endY} L${width},${endY}`} stroke={to} stroke-width={border_width}> </path>
			<path
				d={[
					`M0,${endY}`,
					`C${SIZE},${endY} ${SIZE},${startY} ${SIZE * 2},${startY}`,
					`C${SIZE * 3},${startY} ${SIZE * 3},${endY} ${width},${endY}`,
				].join(' ')}
				stroke={stroke}
				fill={to}
				stroke-width={border_width}></path>
		</pattern>
	</defs>
	<rect width="100%" height="100%" fill={`url(#${id})`}></rect>
</svg>
